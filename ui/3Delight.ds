#include "$HFS/houdini/soho/parameters/CommonMacros.ds"

#define DELIGHT_CONTROL_NEXT_PARM(NAME, CATEGORY, DEFAULT)	\
	name	NAME \
	type	toggle \
	nolabel	\
	joinnext\
	parmtag	{ spare_category CATEGORY } \
	default	{ DEFAULT }

#define DELIGHT_BEGIN_SEP_TITLE(NAME, CATEGORY)	\
	name	NAME \
	type	separator \
	joinnext\
	parmtag	{ spare_category CATEGORY }

#define DELIGHT_TITLE(NAME, CATEGORY, TITLE)	\
	name	NAME \
	type	label \
	nolabel	\
	joinnext\
	default	{ TITLE } \
	parmtag	{ spare_category CATEGORY }

#define DELIGHT_END_SEP_TITLE(NAME, CATEGORY)	\
	name	NAME \
	type	separator \
	parmtag	{ spare_category CATEGORY }

#define DELIGHT_FULL_TITLE(NAME, TITLE)	\
	collection	\
	{	\
		name	NAME##_title	\
		parmtag	{ spare_category "3Delight" }	\
		parm	\
		{	\
			name NAME##_space	\
			type label	\
			nolabel	\
			parmtag	{ spare_category "3Delight" }	\
		}	\
		parm	\
		{	\
			DELIGHT_BEGIN_SEP_TITLE(NAME##_separator1, "3Delight")	\
		}	\
		parm	\
		{	\
			DELIGHT_TITLE(NAME##_label1, "3Delight", TITLE)	\
		}	\
		parm	\
		{	\
			DELIGHT_END_SEP_TITLE(NAME##_separator2, "3Delight")	\
		}	\
	}

{
	name 3Delight
	label "3Delight"

#include "$HFS/houdini/soho/parameters/CommonControl.ds"
#include "$HFS/houdini/soho/parameters/CommonView.ds"
#include "$HFS/houdini/soho/parameters/CommonObject.ds"
#include "$HFS/houdini/soho/parameters/Instance.ds"

	parm
	{
		SOHO_TOGGLE(_3dl_render_poly_as_subd, "Render Polygons as Subdivision Surface", "3Delight", 0)
	}

	parm
	{
		SOHO_TOGGLE(_3dl_smooth_curves, "Smooth Curves", "3Delight", 1)
	}

	collection
	{
		name	_3dl_obj_geo_label1_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			DELIGHT_BEGIN_SEP_TITLE(_3dl_obj_geo_separator1, "3Delight")
    	}
		parm
		{
			DELIGHT_TITLE(_3dl_obj_geo_label1, "3Delight", "Visibility")
    	}
		parm
		{
			DELIGHT_END_SEP_TITLE(_3dl_obj_geo_separator2, "3Delight")
    	}
	}

	parm
	{
		SOHO_TOGGLE(_3dl_visibility_camera, "Visible to Camera", "3Delight", 1)
	}

	parm
	{
		SOHO_TOGGLE(_3dl_visibility_diffuse, "Visible in Diffuse", "3Delight", 1)
	}

	parm
	{
		SOHO_TOGGLE(_3dl_visibility_reflection, "Visible in Reflections", "3Delight", 1)
	}

	parm
	{
		SOHO_TOGGLE(_3dl_visibility_refraction, "Visible in Refractions", "3Delight", 1)
	}

	parm
	{
		SOHO_TOGGLE(_3dl_visibility_shadow, "Casts Shadows", "3Delight", 1)
	}



	parm
	{
		SOHO_PARM(_3dl_compositing, "Compositing", "3Delight", string, 1, "regular")
		menu
		{
			"regular" "Regular"
			"matte" "Matte"
			"prelit" "Prelit"
		}
	}

	collection
	{
		name	_3dl_obj_geo_label2_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			name _3dl_space2
			type label
			nolabel
			parmtag	{ spare_category "3Delight" }
		}
		parm
		{
			DELIGHT_BEGIN_SEP_TITLE(_3dl_obj_geo_separator3, "3Delight")
    	}
		parm
		{
			DELIGHT_TITLE(_3dl_obj_geo_label2, "3Delight", "Motion Blur")
    	}
		parm
		{
			DELIGHT_END_SEP_TITLE(_3dl_obj_geo_separator4, "3Delight")
    	}
	}

	parm
	{
		SOHO_PARM(_3dl_transformation_blur, "Transform Motion Blur", "3Delight", string, 1, "on1")
		menu
		{
			"on1" "On (if detected)"
			"on2" "On (always)"
			"off" "Off"
		}
	}

	parm
	{
		SOHO_INT(_3dl_transformation_extra_samples, "Additional Transform Samples", "3Delight", 0)
		range { 0! 10 }
		disablewhen	  "{ _3dl_transformation_blur == "off" }"
	}

	parm
	{
		SOHO_PARM(_3dl_deformation, "Deformation Motion Blur", "3Delight", string, 1, "on1")
		menu
		{
			"on1" "On (if detected)"
			"on2" "On (always)"
			"off" "Off"
		}
	}

	parm
	{
		SOHO_INT(_3dl_add_samples, "Additional Deformation Samples", "3Delight", 0)
		range { 0! 10 }
		disablewhen	  "{ _3dl_deformation == "off" }"
	}

	collection
	{
		name	_3dl_obj_geo_label3_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			name _3dl_space3
			type label
			nolabel
			parmtag	{ spare_category "3Delight" }
		}
		parm
		{
			DELIGHT_BEGIN_SEP_TITLE(_3dl_obj_geo_separator5, "3Delight")
    	}
		parm
		{
			DELIGHT_TITLE(_3dl_obj_geo_label3, "3Delight", "Spatial Overrides")
    	}
		parm
		{
			DELIGHT_END_SEP_TITLE(_3dl_obj_geo_separator6, "3Delight")
    	}
	}

	parm
	{
		SOHO_TOGGLE(_3dl_spatial_override, "Use as a Spatial Attribute Override", "3Delight", 0)
	}

	collection
	{
	    name	_3dl_override_compositing_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			DELIGHT_CONTROL_NEXT_PARM(_3dl_override_compositing_enable, "3Delight", 0)
			disablewhen  "{ _3dl_spatial_override == 0 }"
		}
		parm
		{
			SOHO_PARM(_3dl_override_compositing, "Compositing", "3Delight", string, 1, "regular")
			menu
			{
				"regular" "Regular"
				"matte" "Matte"
				"prelit" "Prelit"
			}
			disablewhen  "{ _3dl_override_compositing_enable == 0 } { _3dl_spatial_override == 0 }"
		}
	}

	collection
	{
		name	_3dl_override_visibility_camera_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			DELIGHT_CONTROL_NEXT_PARM(_3dl_override_visibility_camera_enable, "3Delight", 0)
			disablewhen  "{ _3dl_spatial_override == 0 }"
		}
		parm
		{
			SOHO_TOGGLE(_3dl_override_visibility_camera, "Visible to Camera", "3Delight", 0)
			disablewhen  "{ _3dl_override_visibility_camera_enable == 0 } { _3dl_spatial_override == 0 }"
		}
	}

	collection
	{
	    name	_3dl_override_visibility_diffuse_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			DELIGHT_CONTROL_NEXT_PARM(_3dl_override_visibility_diffuse_enable, "3Delight", 0)
			disablewhen  "{ _3dl_spatial_override == 0 }"
		}
		parm
		{
			SOHO_TOGGLE(_3dl_override_visibility_diffuse, "Visible in Diffuse", "3Delight", 0)
			disablewhen  "{ _3dl_override_visibility_diffuse_enable == 0 } { _3dl_spatial_override == 0 }"
		}
	}

	collection
	{
	    name	_3dl_override_visibility_reflection_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			DELIGHT_CONTROL_NEXT_PARM(_3dl_override_visibility_reflection_enable, "3Delight", 0)
			disablewhen  "{ _3dl_spatial_override == 0 }"
		}
		parm
		{
			SOHO_TOGGLE(
				_3dl_override_visibility_reflection,
				"Visible in Reflections", "3Delight", 0)
			disablewhen  "{ _3dl_override_visibility_reflection_enable == 0 } { _3dl_spatial_override == 0 }"
		}
	}

	collection
	{
	    name	_3dl_override_visibility_refraction_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			DELIGHT_CONTROL_NEXT_PARM(
				_3dl_override_visibility_refraction_enable, "3Delight", 0)
			disablewhen  "{ _3dl_spatial_override == 0 }"
		}
		parm
		{
			SOHO_TOGGLE(
				_3dl_override_visibility_refraction,
				"Visible in Refractions", "3Delight", 0)
			disablewhen  "{ _3dl_override_visibility_refraction_enable == 0 } { _3dl_spatial_override == 0 }"
		}
	}

	collection
	{
	    name	_3dl_override_visibility_shadow_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			DELIGHT_CONTROL_NEXT_PARM(
				_3dl_override_visibility_shadow_enable, "3Delight", 0)
			disablewhen  "{ _3dl_spatial_override == 0 }"
		}
		parm
		{
			SOHO_TOGGLE(
				_3dl_override_visibility_shadow,
				"Casts Shadows", "3Delight", 0)
			disablewhen  "{ _3dl_override_visibility_shadow_enable == 0 } { _3dl_spatial_override == 0 }"
		}
	}


	parm
	{
		SOHO_TOGGLE(
			_3dl_override_surface_shader,
			"Override Surface Shader", "3Delight", 0)
		disablewhen  "{ _3dl_spatial_override == 0 }"
	}

	parm
	{
		SOHO_FLOAT(_3dl_spread, "Spread", "3Delight", 1)
		range { 0! 1! }
		// Spread only makes sense on a single-face geometry
		hidewhen "{ light_type != "grid"  light_type != "point"  light_type != "disk" }"
		// Spread needs direction, and point doesn't have a normal by default
		disablewhen	"{ light_type == "point"  coneenable == "off" }"
	}

	parm
	{
		//Add Radius parameter to control shadow sharpness when we add a spotlight.
		SOHO_FLOAT(_3dl_spotlight_size, "Spot Light Size", "3Delight", 1)
		range { 1.0! 100 }
		hidewhen "{coneenable == "off"}"
	}


	DELIGHT_FULL_TITLE(_3dl_obj_light_contrib, "Contributions")

	collection
	{
		name _3dl_contributions_group
		parmtag	{ spare_category "3Delight" }

		parm
		{
			SOHO_FLOAT(_3dl_diffuse_contribution, "Diffuse", "3Delight", 1)
			range { 0! 1! }
		}

		parm
		{
			SOHO_FLOAT(_3dl_specular_contribution, "Specular", "3Delight", 1)
			range { 0! 1! }
		}

		parm
		{
			SOHO_FLOAT(_3dl_hair_contribution, "Hair", "3Delight", 1)
			range { 0! 1! }
		}

		parm
		{
			SOHO_FLOAT(_3dl_volume_contribution, "Volume", "3Delight", 1)
			range { 0! 1! }
		}
	}

	DELIGHT_FULL_TITLE(_3dl_compositing_group, "Compositing")

	parm
	{
		SOHO_TOGGLE(_3dl_light_prelit, "Prelit", "3Delight", 0)
	}

	DELIGHT_FULL_TITLE(_3dl_shutter, "Shutter")

	collection
	{
	    name	_3dl_shutter_group
		parmtag	{ spare_category "3Delight" }

		parm
		{
			SOHO_FLOAT(_3dl_shutter_duration, "Duration", "3Delight", 0.5)
			range { 0! 1 }
		}

		parm
		{
			SOHO_FLOAT(_3dl_shutter_efficiency, "Efficiency", "3Delight", 1)
			range { 0! 1! }
			disablewhen  "{ _3dl_shutter_duration == 0 }"
		}

/*
		Disabled until we actually need it
		parm
		{
			SOHO_FLOAT(_3dl_shutter_center, "Center", "3Delight", 0.5)
			range { 0! 1! }
			disablewhen  "{ _3dl_shutter_duration == 0 }"
		}
*/
	}

	DELIGHT_FULL_TITLE(_3dl_aperture, "Lens")

	collection
	{
	    name	_3dl_aperture_group
		parmtag	{ spare_category "3Delight" }

		parm
		{
			SOHO_TOGGLE(_3dl_enable_dof, "Depth of Field", "3Delight", 0)
		}

		parm
		{
			SOHO_FLOAT(_3dl_focal_distance, "Focus Distance", "3Delight", 0)
			range { 0! 1000 }
			disablewhen  "{ _3dl_enable_dof == 0 }"
		}

		parm
		{
			SOHO_FLOAT(_3dl_fstop, "F-Stop", "3Delight", 0)
			range { 1.4 22 }
			logarithmic
			disablewhen  "{ _3dl_enable_dof == 0 }"
		}

		parm
		{
			SOHO_FLOAT(_3dl_lense_squeeze, "Anamorphic Squeeze", "3Delight", 1)
			range { 0.5! 2! }
			disablewhen "{_3dl_enable_dof == 0}"
		}

		parm
		{
			SOHO_TOGGLE(_3dl_enable_aperture_blades, "Use Finite Number of Blades", "3Delight", 0)
			disablewhen  "{ _3dl_enable_dof == 0 }"
		}

		parm
		{
			SOHO_INT(_3dl_aperture_blades, "Number of Blades", "3Delight", 5)
			range { 3! 10 }
			disablewhen  "{ _3dl_enable_aperture_blades == 0 } { _3dl_enable_dof == 0 }"
		}

		parm
		{
			SOHO_FLOAT(_3dl_aperture_blades_rotation, "Rotation", "3Delight", 0)
			range { 0! 180! }
			disablewhen  "{ _3dl_enable_aperture_blades == 0 } { _3dl_enable_dof == 0 }"
		}
	}

	DELIGHT_FULL_TITLE(_3dl_lens_distortion, "Distortion")

	collection
	{
	    name	_3dl_lens_distortion_group
		parmtag	{ spare_category "3Delight" }

		parm
		{
			SOHO_PARM(_3dl_distortion_type, "Type", "3Delight", string, 1, "none")
			menu
			{
				"none" "None"
				"barrel" "Barrel"
				"pincushion" "Pincushion"
			}
		}

		parm
		{
			SOHO_FLOAT(_3dl_distortion_intensity, "Intensity", "3Delight", 0)
			range { 0! 1! }
			disablewhen  "{ _3dl_distortion_type == "none" }"
		}
	}

	DELIGHT_FULL_TITLE(_3dl_projection, "Projection")

	collection
	{
	    name	_3dl_projection_group
		parmtag	{ spare_category "3Delight" }

		parm
		{
			SOHO_PARM(_3dl_projection_type, "Type", "3Delight", string, 1, "perspectivecamera")
			menu
			{
				"perspectivecamera" "Perspective"
				"orthographiccamera" "Orthographic"
				"cylindricalcamera" "Cylindrical"
				"fisheyecamera/stereographic" "Fisheye Stereographic"
				"fisheyecamera/equidistant" "Fisheye Equidistant"
				"fisheyecamera/equisolidangle" "Fisheye Equisolid"
				"fisheyecamera/orthographic" "Fisheye Orthographic"
				"sphericalcamera" "Spherical"
			}
		}

		parm
		{
			SOHO_FLOAT(_3dl_fov, "Field of View", "3Delight", 45)
			range { 0! 360! }
			disablewhen
				"{ _3dl_projection_type == "orthographiccamera" } { _3dl_projection_type == "sphericalcamera" }"
		}

		parm
		{
			SOHO_FLOAT(_3dl_projection_aux_fov, "Horizontal Field of View", "3Delight", 180)
			range { 0! 360! }
			disablewhen  "{ _3dl_projection_type != "cylindricalcamera" }"
		}
	}
	
		parm
		{
			SOHO_TOGGLE(_3dl_creation_flag, "", "3Delight", 0)
			invisible
		}

		
}
