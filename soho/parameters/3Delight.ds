#include "$HFS/houdini/soho/parameters/CommonMacros.ds"

#define DELIGHT_CONTROL_NEXT_PARM(NAME, CATEGORY, DEFAULT)	\
	name	NAME \
	type	toggle \
	nolabel	\
	joinnext\
	parmtag	{ spare_category CATEGORY } \
	default	{ DEFAULT }

#define DELIGHT_BEGIN_SEP_TITLE(NAME, CATEGORY)	\
	name	NAME \
	type	separator \
	joinnext\
	parmtag	{ spare_category CATEGORY }

#define DELIGHT_TITLE(NAME, CATEGORY, TITLE)	\
	name	NAME \
	type	label \
	nolabel	\
	joinnext\
	default	{ TITLE } \
	parmtag	{ spare_category CATEGORY }

#define DELIGHT_END_SEP_TITLE(NAME, CATEGORY)	\
	name	NAME \
	type	separator \
	parmtag	{ spare_category CATEGORY }

#define DELIGHT_FULL_TITLE(NAME, TITLE)	\
	collection	\
	{	\
		name	NAME##_title	\
		parmtag	{ spare_category "3Delight" }	\
		parm	\
		{	\
			name NAME##_space	\
			type label	\
			nolabel	\
			parmtag	{ spare_category "3Delight" }	\
		}	\
		parm	\
		{	\
			DELIGHT_BEGIN_SEP_TITLE(NAME##_separator1, "3Delight")	\
		}	\
		parm	\
		{	\
			DELIGHT_TITLE(NAME##_label1, "3Delight", TITLE)	\
		}	\
		parm	\
		{	\
			DELIGHT_END_SEP_TITLE(NAME##_separator2, "3Delight")	\
		}	\
	}

{
	name 3Delight
	label "3Delight"

#include "$HFS/houdini/soho/parameters/CommonControl.ds"
#include "$HFS/houdini/soho/parameters/CommonView.ds"
#include "$HFS/houdini/soho/parameters/CommonObject.ds"
#include "$HFS/houdini/soho/parameters/Instance.ds"

	parm
	{
		SOHO_TOGGLE(_3dl_render_poly_as_subd, "Render Polygons as Subdivision Surface", "3Delight", 0)
	}

	collection
	{
		name	_3dl_obj_geo_label1_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			DELIGHT_BEGIN_SEP_TITLE(_3dl_obj_geo_separator1, "3Delight")
    	}
		parm
		{
			DELIGHT_TITLE(_3dl_obj_geo_label1, "3Delight", "Visibility")
    	}
		parm
		{
			DELIGHT_END_SEP_TITLE(_3dl_obj_geo_separator2, "3Delight")
    	}
	}

	parm 
	{
		SOHO_TOGGLE(_3dl_vis_diffuse, "Visible in Diffuse", "3Delight", 1)
	}

	parm 
	{
		SOHO_PARM(_3dl_compositing, "Compositing", "3Delight", string, 1, "regular")
		menu
		{
			"regular" "Regular"
			"matte" "Matte"
			"prelit" "Prelit"
		}
	}

	collection
	{
		name	_3dl_obj_geo_label2_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			name _3dl_space2
			type label
			nolabel
			parmtag	{ spare_category "3Delight" }
		}
		parm
		{
			DELIGHT_BEGIN_SEP_TITLE(_3dl_obj_geo_separator3, "3Delight")
    	}
		parm
		{
			DELIGHT_TITLE(_3dl_obj_geo_label2, "3Delight", "Motion Blur")
    	}
		parm
		{
			DELIGHT_END_SEP_TITLE(_3dl_obj_geo_separator4, "3Delight")
    	}
	}

	parm
	{
		SOHO_PARM(_3dl_transformation_blur, "Transform Motion Blur", "3Delight", string, 1, "on1")
		menu
		{
			"on1" "On (if detected)"
			"on2" "On (always)"
			"off" "Off"
		}
	}

	parm
	{
		SOHO_INT(_3dl_transformation_extra_samples, "Additional Transform Samples", "3Delight", 0)
		range { 0! 10 }
		disablewhen	  "{ _3dl_transformation_blur == "off" }"
	}

	parm
	{
		SOHO_PARM(_3dl_deformation, "Deformation Motion Blur", "3Delight", string, 1, "on1")
		menu
		{
			"on1" "On (if detected)"
			"on2" "On (always)"
			"off" "Off"
		}
	}

	parm
	{
		SOHO_INT(_3dl_add_samples, "Additional Deformation Samples", "3Delight", 0)
		range { 0! 10 }
		disablewhen	  "{ _3dl_deformation == "off" }"
	}

	collection
	{
		name	_3dl_obj_geo_label3_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			name _3dl_space3
			type label
			nolabel
			parmtag	{ spare_category "3Delight" }
		}
		parm
		{
			DELIGHT_BEGIN_SEP_TITLE(_3dl_obj_geo_separator5, "3Delight")
    	}
		parm
		{
			DELIGHT_TITLE(_3dl_obj_geo_label3, "3Delight", "Attributes Override Volume")
    	}
		parm
		{
			DELIGHT_END_SEP_TITLE(_3dl_obj_geo_separator6, "3Delight")
    	}
	}

	parm 
	{
		SOHO_TOGGLE(_3dl_override_vol, "Render as an Attribute Override Volume", "3Delight", 0)
	}

	collection
	{
	    name	_3dl_over_compositing_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			DELIGHT_CONTROL_NEXT_PARM(_3dl_over_compositing_enable, "3Delight", 0)
			disablewhen  "{ _3dl_override_vol == 0 }"
		}
		parm 
		{
			SOHO_PARM(_3dl_over_compositing, "Compositing", "3Delight", string, 1, "regular")
			menu
			{
				"regular" "Regular"
				"matte" "Matte"
				"prelit" "Prelit"
			}
        	disablewhen  "{ _3dl_over_compositing_enable == 0 } { _3dl_override_vol == 0 }"
		}
	}

	collection
	{
		name	_3dl_over_vis_camera_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			DELIGHT_CONTROL_NEXT_PARM(_3dl_over_vis_camera_enable, "3Delight", 0)
			disablewhen  "{ _3dl_override_vol == 0 }"
		}
		parm 
		{
			SOHO_TOGGLE(_3dl_over_vis_camera, "Visible to Camera", "3Delight", 0)
        	disablewhen  "{ _3dl_over_vis_camera_enable == 0 } { _3dl_override_vol == 0 }"
		}
	}

	collection
	{
	    name	_3dl_over_vis_diffuse_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			DELIGHT_CONTROL_NEXT_PARM(_3dl_over_vis_diffuse_enable, "3Delight", 0)
			disablewhen  "{ _3dl_override_vol == 0 }"
		}
		parm 
		{
			SOHO_TOGGLE(_3dl_over_vis_diffuse, "Visible in Diffuse", "3Delight", 0)
        	disablewhen  "{ _3dl_over_vis_diffuse_enable == 0 } { _3dl_override_vol == 0 }"
		}
	}

	collection
	{
	    name	_3dl_over_vis_reflection_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			DELIGHT_CONTROL_NEXT_PARM(_3dl_over_vis_reflection_enable, "3Delight", 0)
			disablewhen  "{ _3dl_override_vol == 0 }"
		}
		parm 
		{
			SOHO_TOGGLE(_3dl_over_vis_reflection, "Visible in Reflections", "3Delight", 0)
        	disablewhen  "{ _3dl_over_vis_reflection_enable == 0 } { _3dl_override_vol == 0 }"
		}
	}

	collection
	{
	    name	_3dl_over_vis_refraction_group
		parmtag	{ spare_category "3Delight" }
		parm
		{
			DELIGHT_CONTROL_NEXT_PARM(_3dl_over_vis_refraction_enable, "3Delight", 0)
			disablewhen  "{ _3dl_override_vol == 0 }"
		}
		parm 
		{
			SOHO_TOGGLE(_3dl_over_vis_refraction, "Visible in Refractions", "3Delight", 0)
        	disablewhen  "{ _3dl_over_vis_refraction_enable == 0 } { _3dl_override_vol == 0 }"
		}
	}

	parm 
	{
		SOHO_TOGGLE(_3dl_override_ss, "Override Surface Shader", "3Delight", 0)
       	disablewhen  "{ _3dl_override_vol == 0 } { _3dl_override_ss == 0 }"
	}

	parm
	{
		SOHO_TOGGLE(_3dl_enable_dof, "Depth of Field", "3Delight", 0)
	}

	parm 
	{
		SOHO_FLOAT(_3dl_spread, "Spread", "3Delight", 1)
		range { 0! 1! }
		hidewhen	  "{ light_type != "grid" light_type != "point" } { light_type == "point" coneenable == "off" }"
	}

	DELIGHT_FULL_TITLE(_3dl_obj_light_contrib, "Contributions")

	parm 
	{
		SOHO_FLOAT(_3dl_diffuse_contribution, "Diffuse", "3Delight", 1)
		range { 0! 1! }
	}

	parm 
	{
		SOHO_FLOAT(_3dl_specular_contribution, "Specular", "3Delight", 1)
		range { 0! 1! }
	}

	parm 
	{
		SOHO_FLOAT(_3dl_hair_contribution, "Hair", "3Delight", 1)
		range { 0! 1! }
	}

	parm 
	{
		SOHO_FLOAT(_3dl_volume_contribution, "Volume", "3Delight", 1)
		range { 0! 1! }
	}
}
