surface hlight(
	color light_color = color(1),
	float light_intensity = 1,
	float light_exposure = 1,
	int normalizearea  = 1,
	int singlesided = 0,
	int reverse = 0,

	/* spot light */
	int coneenable = 0,
	float coneangle = 45,
	float conedelta = 10
)
{
	Ci = 0;

	/* So that area light doesn't cast any shadows. */
	if( !raytype("camera") )
	{
		Ci += transparent();
	}

	float scale = 1;
	if( coneenable )
	{
		/* Cone and penumbra */
		float cosangle = abs( dot(-normalize(I), normalize(N)) );
		float _coneangle = radians(coneangle);
		float penumbraangle = radians(conedelta);

		float coslimit = cos(_coneangle / 2);
		float cospen = cos((_coneangle / 2) + penumbraangle);
		float low = min(cospen, coslimit);
		float high = max(cospen, coslimit);

		scale = M_PI * smoothstep(low, high, cosangle);
		scale /= surfacearea();
	}
	else
	{
		/* all other lights */
		if( singlesided && backfacing() != reverse )
		{
			Ci = transparent();
			return;
		}

		if( normalizearea == 1 )
			scale /= surfacearea();
	}

	Ci += scale * light_color * light_intensity * pow(2, light_exposure) * emission();
}
